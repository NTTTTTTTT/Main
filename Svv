local PlaceID = game.PlaceId
local AllIDs = {} -- Danh sách server đã tham gia
local foundAnything = ""
local actualHour = os.date("!*t").hour

function TPReturner()
    local Site
    if foundAnything == "" then
        Site = game:GetService("HttpService"):JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game:GetService("HttpService"):JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end

    if Site.nextPageCursor then
        foundAnything = Site.nextPageCursor
    else
        foundAnything = nil
    end

    for _, v in pairs(Site.data) do
        local ID = tostring(v.id)
        if v.playing < v.maxPlayers and not table.find(AllIDs, ID) then
            table.insert(AllIDs, ID) -- Lưu ID vào danh sách tránh quay lại
            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
            wait(4) -- Chờ để đảm bảo Teleport được thực hiện
            return
        end
    end
end

function Teleport()
    while true do
        TPReturner()
        if not foundAnything then
            print("Không tìm thấy server khả dụng. Dừng tìm kiếm.")
            break
        end
        wait(1) -- Chờ để tránh spam API
    end
end

Teleport()
